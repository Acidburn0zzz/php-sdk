{"name":"Php-sdk","tagline":"LoginRadius PHP SDK is a development kit that lets you integrate Social Login such as Facebook, Google, Twitter and over 20 more on a PHP website. The SDK also fetches user profile data and can be customized from your LoginRadius user account. Ex: social icon sets, login interface, provider settings, etc.","body":"LoginRadius library for PHP\r\n=====\r\nPHP SDK for the LoginRadius API. Get social authentication, user profile data and send messages using many social network and email clients such as Facebook, Google, Twitter, Yahoo, LinkedIn, etc.\r\n\r\nInstallation\r\n----\r\n 1. **Font-end interface:** Add social login interface code from your LoginRadius user account to your webpage.\r\n 2. **Call-back setup:** Set-up the callback URL in your LoginRadius user account, this is the URL where user would be redirected after authentication.\r\n 3. **Library set-up and installation:** Copy SDK file to your project directory and follow the instructions to implement the SDK into your callback page.\r\n\r\n    **Note**: If you are implementing callback on the same page where you are showing Social Login interface, then implement callback handling as mentioned below:-\r\n\r\n**Example Code**\r\n\r\n    if(isset($_REQUEST['token'])){\r\n \t    // callback handling code\r\n    }\r\nSteps to call the library:\r\n\r\n     1. Download the LoginRadius SDK and add it to your web project.\r\n     2. On the code behind of callback page, create an object of LoginRadius class and pass secret key.\r\n     3. If success, call loginradius_get_data method to get user's profile data.\r\n       [For Premium paid plans: You can call loginradius_get_data method to get Extended user profile data.]\r\n       visit the link for more information to get list of data: https://www.loginradius.com/product/user-profile-data\r\n\r\n**Sample code for authentication and get basic profile data**\r\n\r\n**PHP**\r\n\r\n    // include main PHP SDK file\r\n \tinclude('LoginRadiusSDK.php');\r\n\t\r\n\t // create LoginRadius class object\r\n     $obj = new LoginRadius(\"API_SECRET\", $_REQUEST['token']);\r\n\t\r\n\t // get user profile data\r\n     $userprofile = $obj->loginradius_get_data();\r\n\t\r\n\t // check if user is authenticated/valid \r\n\t if($obj->IsAuthenticated == true){\r\n\t// print user profile data\r\n\t// social ID  \r\n\techo \"ID=\".$ID=$userprofile->ID.\"<br>\";\r\n\t// Social ID Provider\r\n\techo \"Provider=\".$Provider=$userprofile->Provider.\"<br>\";\r\n\t// Prefix\r\n\techo \"Prefix=\".$Prefix=$userprofile->Prefix.\"<br>\";\r\n\t// First Name\r\n\techo \"FirstName=\".$FirstName=$userprofile->FirstName.\"<br>\";\r\n    // Middle Name\r\n\techo \"Middle Name=\".$MiddleName=$userprofile->MiddleName.\"<br>\";  \r\n\t// Last Name\r\n\techo \"LastName=\".$LastName=$userprofile->LastName.\"<br>\";  \r\n\t// Suffix\r\n\techo \"Suffix=\".$Suffix=$userprofile->Suffix.\"<br>\";  \r\n\t// Full Name\r\n\techo \"FullName=\".$FullName=$userprofile->FullName.\"<br>\";  \r\n\t// Nick Name\r\n\techo \"NickName=\".$NickName=$userprofile->NickName.\"<br>\";  \r\n\t// Profile Name\r\n\techo \"ProfileName=\".$ProfileName=$userprofile->ProfileName.\"<br>\";  \r\n\t// Birthdate\r\n\techo \"BirthDate=\".$BirthDate=$userprofile->BirthDate.\"<br>\";  \r\n\t// Gender\r\n\techo \"Gender=\".$Gender=$userprofile->Gender.\"<br>\";  \r\n\t// Email\r\n\tif(isset($userprofile->Email) && is_array($userprofile->Email) && count($userprofile->Email) > 0){\r\n            echo 'Emails:-<br />';\r\n            foreach($userprofile->Email as $email){\r\n                echo isset($email->Type) ? 'Email Type='.$email->Type.\"<br/>\" : '';\r\n                echo isset($email->Value) ? \"Email=\".$email->Value.\"<br/>\" : '';\r\n                echo '<br/>';\r\n       }\r\n     }\r\n  \t echo \"<br>\";  \r\n\t // Country\r\n\t echo \"Country Name=\";  \r\n\t if(isset($userprofile->Country->Name) && is_string($userprofile->Country->Name))\r\n\t {  \r\n\t\techo $userprofile->Country->Name.\"<br>\";  \r\n\t }elseif(isset($userprofile->Country) && is_string($userprofile->Country) ){  \r\n\t\techo $userprofile->Country.\"<br>\";  \r\n\t }else{  \r\n\t\techo '<br>';  \r\n\t }\r\n\t // Country Code \r\n\t echo \"Country Code=\";    \r\n\t if(isset($userprofile->Country->Code) && is_string($userprofile->Country->Code))\r\n\t {    \r\n\t\techo $userprofile->Country->Code.\"<br>\";    \r\n\t }else{    \r\n\t\techo '<br>';    \r\n\t }\r\n    }\r\n\r\n\r\n\r\n**Sample code to get Extended user profile (Only for Paid plans - Premium)**\r\n\r\n**PHP**\r\n\r\n     // include main PHP SDK file\r\n     include('LoginRadiusSDK.php');\r\n\t\r\n\t// create LoginRadius class object\r\n \t$obj = new LoginRadius(\"API_SECRET\", $_REQUEST['token']);\r\n\r\n\t// get user profile data\r\n    $userprofile = $obj->loginradius_get_data();\r\n\t\r\n\t// check if user is authenticated/valid \r\n\tif($obj->IsAuthenticated == true){\r\n\t// print user profile data\r\n\t// social ID  \r\n\techo \"ID=\".$ID=$userprofile->ID.\"<br>\";\r\n\t// Social ID Provider\r\n\techo \"Provider=\".$Provider=$userprofile->Provider.\"<br>\";\r\n\t// Prefix\r\n\techo \"Prefix=\".$Prefix=$userprofile->Prefix.\"<br>\";\r\n\t// First Name\r\n\techo \"FirstName=\".$FirstName=$userprofile->FirstName.\"<br>\";  \r\n\t// Middle Name\r\n\techo \"Middle Name=\".$MiddleName=$userprofile->MiddleName.\"<br>\";  \r\n    // Last Name\r\n\techo \"LastName=\".$LastName=$userprofile->LastName.\"<br>\";  \r\n\t// Suffix\r\n\techo \"Suffix=\".$Suffix=$userprofile->Suffix.\"<br>\";  \r\n\t// Full Name\r\n\techo \"FullName=\".$FullName=$userprofile->FullName.\"<br>\";  \r\n\t// Nick Name\r\n\techo \"NickName=\".$NickName=$userprofile->NickName.\"<br>\";  \r\n\t// Profile Name\r\n\techo \"ProfileName=\".$ProfileName=$userprofile->ProfileName.\"<br>\";  \r\n\t// Birthdate\r\n\techo \"BirthDate=\".$BirthDate=$userprofile->BirthDate.\"<br>\";  \r\n\t// Gender\r\n\techo \"Gender=\".$Gender=$userprofile->Gender.\"<br>\";  \r\n\t// Email\r\n\tif(isset($userprofile->Email) && is_array($userprofile->Email) &&   count($userprofile->Email) > 0){\r\n            echo 'Emails:-<br />';\r\n            foreach($userprofile->Email as $email){\r\n                echo isset($email->Type) ? 'Email Type='.$email->Type.\"<br/>\" : '';\r\n                echo isset($email->Value) ? \"Email=\".$email->Value.\"<br/>\" : '';\r\n                echo '<br/>';\r\n            }\r\n     }\r\n  \t echo \"<br>\";  \r\n\t // Country\r\n\t echo \"Country Name=\";  \r\n\t if(isset($userprofile->Country->Name) && is_string($userprofile->Country->Name))\r\n\t {  \r\n\t\techo $userprofile->Country->Name.\"<br>\";  \r\n\t }elseif(isset($userprofile->Country) && is_string($userprofile->Country) ){  \r\n\t\techo $userprofile->Country.\"<br>\";  \r\n\t }else{  \r\n\t\techo '<br>';  \r\n\t}\r\n\t// Country Code \r\n\techo \"Country Code=\";    \r\n\tif(isset($userprofile->Country->Code) && is_string($userprofile->Country->Code))\r\n\t{    \r\n\t\techo $userprofile->Country->Code.\"<br>\";    \r\n\t}else{    \r\n\t\t echo '<br>';    \r\n\t}\r\n\t// Image Url\r\n\techo \"Image Url =\".$ImageUrl=$userprofile->ImageUrl.\"<br>\";\r\n\t// Profile Url\r\n\techo \"Profile Url=\".$ProfileUrl=$userprofile->ProfileUrl.\"<br>\"; \r\n\t// HomeTown\r\n\techo \"Home Town=\".$Hometown=$userprofile->HomeTown.\"<br>\"; \r\n\t// State\r\n\techo \"State=\".$State=$userprofile->State.\"<br>\"; \r\n\t// City\r\n\techo \"City=\".$City=$userprofile->City.\"<br>\"; \r\n\t// About\r\n\techo \"About=\".$About=$userprofile->About.\"<br>\"; \r\n\t// Time Zone\r\n\techo \"TimeZone=\".$TimeZone=$userprofile->TimeZone.\"<br>\"; \r\n\t// LocalLanguage\r\n\techo \"Local Language=\".$LocalLanguage=$userprofile->LocalLanguage.\"<br>\"; \r\n\t// Language\r\n\techo \"Language=\".$Language=$userprofile->Language.\"<br>\"; \r\n\t// Verified\r\n\techo \"Verified=\".$Verified=$userprofile->Verified.\"<br>\"; \r\n\t// Updated Time\r\n\techo \"Updated Time=\".$UpdatedTime=$userprofile->UpdatedTime.\"<br>\"; \r\n\t// Positions\r\n\tif(isset($userprofile->Positions) && is_array($userprofile->Positions) && count($userprofile->Positions) > 0){\r\n\t\t  echo 'Positions:-<br />';\r\n\t\t  foreach($userprofile->Positions as $positions){\r\n\t\t\techo isset($positions->Position) ? 'Position='.$positions->Position.\"<br/>\" : '';\r\n\t\t\techo isset($positions->Summary) ? \"Summary=\".$positions->Summary.\"<br/>\" : '';\r\n\t\t\techo isset($positions->StartDate) ? \"Start Date=\".$positions->StartDate.\"<br/>\" : '';\r\n\t\t\techo isset($positions->EndDate) ? \"End Date=\".$positions->EndDate.\"<br/>\" : '';\r\n\t\t\techo isset($positions->IsCurrent) ? \"IsCurrent=\".$positions->IsCurrent.\"<br/>\" : '';\r\n\t\t\techo isset($positions->comapny->Name) ? \"Company Name=\".$positions->comapny->Name.\"<br/>\" : '';\r\n\t\t\techo isset($positions->comapny->Type) ? \"Company Type=\".$positions->comapny->Type.\"<br/>\" : '';\r\n\t\t\techo isset($positions->comapny->Industry) ? \"Company Industry=\".$positions->comapny->Industry.\"<br/>\" : '';\r\n\t\t\techo isset($positions->Location) ? \"Location=\".$positions->Location.\"<br/>\" : '';\r\n\t\t\techo '<br/>';\r\n\t\t}\r\n\t} \r\n\t// Educations\r\n\tif(isset($userprofile->Educations) && is_array($userprofile->Educations) && count($userprofile->Educations) > 0){\r\n\t\techo 'Educations:-<br />';\r\n\t\tforeach($userprofile->Educations as $educations){\r\n\t\t\techo isset($educations->School) ? 'School='.$educations->School.\"<br/>\" : '';\r\n\t\t\techo isset($educations->year) ? \"Year=\".$educations->year.\"<br/>\" : '';\r\n\t\t\techo isset($educations->type) ? \"Type=\".$educations->type.\"<br/>\" : '';\r\n\t\t\techo isset($educations->notes) ? \"Notes=\".$educations->notes.\"<br/>\" : '';\r\n\t\t\techo isset($educations->activities) ? \"Activities=\".$educations->activities.\"<br/>\" : '';\r\n\t\t\techo isset($educations->degree) ? \"Degree=\".$educations->degree.\"<br/>\" : '';\r\n\t\t\techo isset($educations->fieldofstudy) ? \"Field of Study=\".$educations->fieldofstudy.\"<br/>\" : '';\r\n\t\t\techo isset($educations->StartDate) ? \"Start Date=\".$educations->StartDate.\"<br/>\" : '';\r\n\t\t\techo isset($educations->EndDate) ? \"End Date=\".$educations->EndDate.\"<br/>\" : '';\r\n\t\t\techo '<br/>';\r\n\t\t}\r\n\t}\r\n\t\r\n\t     // im accounts\r\n\t     if(isset($userprofile->IMAccounts) && is_array($userprofile->IMAccounts) && count($userprofile->IMAccounts) > 0){\r\n\t\techo 'IM Accounts:-<br />';\r\n\t\tforeach($userprofile->IMAccounts as $imAccount){\r\n\t\t\techo isset($imAccount->AccountType) ? 'Account Type='.$imAccount->AccountType.\"<br/>\" : '';\r\n\t\t\techo isset($imAccount->AccountName) ? \"Account Name=\".$imAccount->AccountName.\"<br/>\" : '';\r\n\t\t\techo '<br/>';\r\n\t\t     }\r\n\t       }\r\n\t\r\n\t     // Phone Numbers\r\n\t     if(isset($userprofile->PhoneNumbers) && is_array($userprofile->PhoneNumbers) && count($userprofile->PhoneNumbers) > 0){\r\n\t\techo 'Phone Numbers:-<br />';\r\n\t\tforeach($userprofile->PhoneNumbers as $phoneNumber){\r\n\t\t\techo isset($phoneNumber->AccountType) ? 'Phone Number Type='.$phoneNumber->PhoneType.\"<br/>\" : '';\r\n\t\t\techo isset($phoneNumber->AccountName) ? \"Phone Number=\".$phoneNumber->PhoneNumber.\"<br/>\" : '';\r\n\t\t\techo '<br/>';\r\n\t\t    }\r\n\t      }\r\n\t\r\n\t     // Addresses\r\n\t     if(isset($userprofile->Addresses) && is_array($userprofile->Addresses) && count($userprofile->Addresses) > 0){\r\n\t\techo 'Addresses:-<br />';\r\n\t\tforeach($userprofile->Addresses as $address){\r\n\t\t\techo isset($address->Type) ? 'Type='.$address->Type.\"<br/>\" : '';\r\n\t\t\techo isset($address->Address1) ? \"Address1=\".$address->Address1.\"<br/>\" : '';\r\n\t\t\techo isset($address->Address2) ? \"Address2=\".$address->Address2.\"<br/>\" : '';\r\n\t\t\techo isset($address->City) ? \"City=\".$address->City.\"<br/>\" : '';\r\n\t\t\techo isset($address->State) ? \"State=\".$address->State.\"<br/>\" : '';\r\n\t\t\techo isset($address->PostalCode) ? \"Postal Code=\".$address->PostalCode.\"<br/>\" : '';\r\n\t\t\techo isset($address->Region) ? \"Region=\".$address->Region.\"<br/>\" : '';\r\n\t\t\techo '<br/>';\r\n\t\t     }\r\n\t       }\r\n\t\r\n\t     // Main Address\r\n\t     echo \"Main Address=\".$mainAddress=$userprofile->MainAddress.\"<br>\"; \r\n\t     // Created\r\n\t     echo \"Created=\".$created=$userprofile->Created.\"<br>\"; \r\n\t     // Local City\r\n\t     echo \"Local City=\".$localCity=$userprofile->LocalCity.\"<br>\"; \r\n\t     // Profile City\r\n\t     echo \"Profile City=\".$profileCity=$userprofile->ProfileCity.\"<br>\"; \r\n\t     // Local Country\r\n\t     echo \"Local Country=\".$localCountry=$userprofile->LocalCountry.\"<br>\"; \r\n         // ProfileCountry\r\n\t     echo \"ProfileCountry=\".$ProfileCountry=$userprofile->ProfileCountry.\"<br>\"; \r\n\t     // RelationshipStatus\r\n\t     echo \"RelationshipStatus=\".$RelationshipStatus=$userprofile->RelationshipStatus.\"<br>\"; \r\n\t     // Quotes\r\n\t     echo \"Quotes=\".$Quotes=$userprofile->Quota.\"<br>\"; \r\n\t     // Interested In\r\n\t     echo count($userprofile->InterestedIn) > 0 ? \"Interested In=\".implode(',', $userprofile->InterestedIn) : \"Interested In=<br>\"; \r\n\t     // Interests\r\n\t     echo \"Interests=\".$Interests=$userprofile->Interests.\"<br>\"; \r\n\t     // Religion\r\n\t     echo \"Religion=\".$Religion=$userprofile->Religion.\"<br>\"; \r\n\t     //  Political Views\r\n\t     echo \"Political Views=\".$Political=$userprofile->Political.\"<br>\"; \r\n\t     // Sports\r\n\t     echo \"Sports=\".$Sports=$userprofile->Sports.\"<br>\";\r\n\t     // Inspirational People\r\n\t     if(isset($userprofile->InspirationalPeople) && is_array($userprofile->InspirationalPeople) && count($userprofile->InspirationalPeople) > 0){\r\n\t\t echo 'Inspirational People:-<br />';\r\n\t\t foreach($userprofile->InspirationalPeople as $people){\r\n\t\t\techo isset($people->Id) ? 'ID='.$people->Id.\"<br/>\" : '';\r\n\t\t\techo isset($people->Name) ? \"Name=\".$people->Name.\"<br/>\" : '';\r\n\t\t\t    echo '<br/>';\r\n\t\t     }\r\n\t      }\r\n\r\n\t     //  Https Image Url\r\n\t     echo \"Https Image Url=\".$HttpsImageUrl=$userprofile->HttpsImageUrl.\"<br>\"; \r\n\t     // Followers Count\r\n\t     echo \"Followers Count=\".$FollowersCount=$userprofile->FollowersCount.\"<br>\"; \r\n\t     //  Friends Count\r\n\t     echo \"Friends Count=\".$FriendsCount=$userprofile->FriendsCount.\"<br>\"; \r\n\t     // Total Status Count\r\n\t     echo \"Total Status Count=\".$TotalStatusesCount=$userprofile->TotalStatusesCount.\"<br>\"; \r\n\t     // Associations\r\n\t     echo \"Associations=\".$Associations=$userprofile->Associations.\"<br>\"; \r\n\t     // Honors\r\n\t     echo \"Honors=\".$Honors=$userprofile->Honors.\"<br>\"; \r\n\t     // Skills\r\n\t    if(isset($userprofile->Skills) && is_array($userprofile->Skills) && count($userprofile->Skills) > 0){\r\n            echo 'Skills:-<br />';\r\n            foreach($userprofile->Skills as $skill){\r\n                echo isset($skill->Id) ? 'ID='.$skill->Id.\"<br/>\" : '';\r\n                echo isset($skill->Name) ? \"Skill=\".$skill->Name.\"<br/>\" : '';\r\n                echo '<br/>';\r\n            }\r\n        } \r\n\t// Current Status\r\n\tif(isset($userprofile->CurrentStatus) && is_array($userprofile->CurrentStatus) && count($userprofile->CurrentStatus) > 0){\r\n            echo 'Current Status:-<br />';\r\n            foreach($userprofile->CurrentStatus as $status){\r\n                echo isset($status->Id) ? 'ID='.$status->Id.\"<br/>\" : '';\r\n                echo isset($status->Text) ? \"Status=\".$status->Text.\"<br/>\" : '';\r\n                echo isset($status->Source) ? \"Source=\".$status->Source.\"<br/>\" : '';\r\n                echo isset($status->CreatedDate) ? \"Created Date=\".$status->CreatedDate.\"<br/>\" : '';\r\n                echo '<br/>';\r\n            }\r\n        }\r\n \t    // Certifications\r\n\t    echo \"Certifications=\".$Certifications=$userprofile->Certifications.\"<br>\"; \r\n\t    // Courses\r\n\t    echo \"Courses=\".$Courses=$userprofile->Courses.\"<br>\"; \r\n\t    // Volunteer\r\n\t    echo \"Volunteer=\".$Volunteer=$userprofile->Volunteer.\"<br>\"; \r\n\t    // RecommendationsReceived\r\n\t    echo \"Recommendations Received=\".$RecommendationsReceived=$userprofile->RecommendationsReceived.\"<br>\"; \r\n\t\r\n\t    // languages\r\n\t    if(isset($userprofile->Languages) && is_array($userprofile->Languages) && count($userprofile->Languages) > 0){\r\n\t\techo 'Languages:-<br />';\r\n\t\tforeach($userprofile->Languages as $language){\r\n\t\t\techo isset($language->Id) ? 'ID='.$language->Id.\"<br/>\" : '';\r\n\t\t\techo isset($language->Name) ? \"Language=\".$language->Name.\"<br/>\" : '';\r\n\t\t\techo '<br/>';\r\n\t\t}\r\n\t}\r\n\t\r\n\t    // Public Repository\r\n\t    echo \"Public Repository=\".$PublicRepository=$userprofile->PublicRepository.\"<br>\"; \r\n\t    // Hireable\r\n\t    echo \"Hireable=\".$Hireable=$userprofile->Hireable.\"<br>\"; \r\n\t    // Repository Url\r\n\t    echo \"Repository Url=\".$RepositoryUrl=$userprofile->RepositoryUrl.\"<br>\"; \r\n\t    // Age\r\n\t    echo \"Age=\".$Age=$userprofile->Age.\"<br>\"; \r\n\t    // Patents\r\n\t    echo \"Patents=\".$Patents=$userprofile->Patents.\"<br>\"; \r\n\r\n\t   // Favorite Things\r\n\t   echo \"Favorite Things=\".$favorite=$userprofile->FavoriteThings.\"<br>\"; \r\n\t   // Professional Headline\r\n\t   echo \"Professional Headline=\".$ProfessionalHeadline=$userprofile->ProfessionalHeadline.\"<br>\"; \r\n\t   // Patents\r\n\t   echo \"Patents=\".$Patents=$userprofile->Patents.\"<br>\";\r\n\t}\t\r\n\r\n\r\nAdvance features(for Paid customers only)\r\n===\r\n\r\nLoginRaidus Contacts API\r\n-----\r\nYou can use this API to fetch contacts from users social networks/email clients - Facebook, Twitter, LinkedIn, Google, Yahoo.\r\n\r\n> LoginRadius generate a unique session token, when user logs in with\r\n> any of social network. The lifetime of LoginRadius token is 15 mins, get/Save this Token to call this API.\r\n\r\n**PHP**\r\n\t\r\n\tinclude('LoginRadiusSDK.php');\r\n\tinclude('LoginRadiusContacts.php');    \r\n\t$obj = new LoginRadiusContacts(\"Your API Secret\", $_REQUEST['token']);\r\n\t$loginRadiusContacts = $obj->loginradius_get_contacts();\r\n\r\n\r\nLoginRadius Post API\r\n---\r\nYou can use this API to Post data to users social networks - Facebook, Twitter, LinkedIn.\r\n\r\n> LoginRadius generate a unique session token, when user logs in with\r\n> any of social network. The lifetime of LoginRadius token is 15 mins, get/Save this Token to call this API.\r\n\r\n**PHP**\r\n\t\r\n\tinclude('LoginRadiusSDK.php');\r\n\tinclude('LoginRadiusStatusUpdate.php');\r\n\t$obj = new LoginRadiusStatusUpdate(\"Your API Secret\", $_REQUEST['token']);\r\n\t$loginRadiusResponse = $obj->loginradius_post_status($to, $title, $url, $imageurl, $status, $caption, $description);\r\n\tif($loginRadiusResponse){\r\n\t\t// message posted successfully\r\n\telse{\r\n\t\t// error in posting message\r\n\t\t// check for the possible errors in \"error.txt\" file in the same folder as SDK\r\n\t}\r\n\r\n\r\nGet Posts\r\n--\r\nYou can use this API to get posts from users social networks - Facebook, Twitter, LinkedIn\r\n\r\n> LoginRadius generate a unique session token, when user logs in with\r\n> any of social network. The lifetime of LoginRadius token is 15 mins, get/Save this Token to call this API.\r\n\r\n**PHP**\r\n\t\r\n\tinclude('LoginRadiusSDK.php');\r\n\tinclude('LoginRadiusPosts.php');\r\n\t$obj = new LoginRadiusPosts(\"Your API Secret\", $_REQUEST['token']);\r\n\t$loginRadiusPosts = $obj->loginradius_get_posts();\r\n\r\n\r\nGet Twitter Mentions\r\n--\r\n\r\nYou can use this API to get mentions from users social network - Twitter.\r\n\r\n> LoginRadius generate a unique session token, when user logs in with\r\n> any of social network. The lifetime of LoginRadius token is 15 mins, get/Save this Token to call this API.\r\n\r\n**PHP**\r\n\t\r\n\tinclude('LoginRadiusSDK.php');\r\n\tinclude('LoginRadiusMentions.php');\r\n\t$obj = new LoginRadiusMentions(\"Your API Secret\", $_REQUEST['token']);\r\n\t$loginRadiusMentions = $obj->loginradius_get_mentions();\r\n\r\nFacebook Groups\r\n--\r\nYou can use this API to get groups from users social network - Facebook.\r\n\r\n> LoginRadius generate a unique session token, when user logs in with\r\n> any of social network. The lifetime of LoginRadius token is 15 mins, get/Save this Token to call this API.\r\n\r\n**PHP**\r\n\r\n\tinclude('LoginRadiusSDK.php');\r\n\tinclude('LoginRadiusGroups.php');\r\n\t$obj = new LoginRadiusGroups(\"Your API Secret\", $_REQUEST['token']);\r\n\t$loginRadiusGroups = $obj->loginradius_get_groups();\r\n\r\n\r\nGet LinkedIn follow companies\r\n--\r\nYou can use this API to get followed companies list from users social network - LinkedIn.\r\n\r\n> LoginRadius generate a unique session token, when user logs in with\r\n> any of social network. The lifetime of LoginRadius token is 15 mins, get/Save this Token to call this API.\r\n\r\n**PHP**\r\n\r\n\tinclude('LoginRadiusSDK.php');\r\n   \tinclude('LoginRadiusCompany.php');\r\n\t$obj = new LoginRadiusCompany(\"Your API Secret\", $_REQUEST['token']);\r\n\t$loginRadiusCompanies = $obj->loginradius_get_company();\r\n\r\nLoginRadius direct message API\r\n--\r\nYou can use this API to send direct message.\r\n\r\n> LoginRadius generate a unique session token, when user logs in with\r\n> any of social network. The lifetime of LoginRadius token is 15 mins, get/Save this Token to call this API.\r\n\r\n**PHP**\r\n\t\r\n\tinclude('LoginRadiusSDK.php');\r\n\tinclude('LoginRadiusMessage.php');\r\n\t$obj = new LoginRadiusMessage(\"Your API Secret\", $_REQUEST['token']);\r\n\t$loginRadiusResponse = $obj->loginradius_send_message($to,$subject,$message);\r\n\tif($loginRadiusResponse){\r\n\t\t// message sent successfully\r\n\telse{\r\n\t\t// error in sending message\r\n\t\t// check for the possible errors in \"error.txt\" file in the same folder as SDK\r\n\t}\r\n\r\n**Request:** Please let us know your feedback and comments. If you have any questions or need a further assistance please contact us at hello@loginradius.com.\r\n","google":"UA-22321867-5","note":"Don't delete this file! It's used internally to help with page regeneration."}